name: Build, Test, Pack & Deploy NuGet package
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  gitversion:
    name: GitVersion
    runs-on: ubuntu-latest
    outputs:
      gitversionSemVer: ${{ steps.outputVars.outputs.packageSemVer }}
      gitversionSemVerFull: ${{ steps.outputVars.outputs.packageSemVerFull }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.3
      with:
        versionSpec: '6.0.x'
    - name: Execute GitVersion
      uses: gittools/actions/gitversion/execute@v3.0.3
      with:
        useConfigFile: true
    - name: Get GitVersion variables (Prerelease)
      run: |
        echo "packageSemVer=${{ env.GitVersion_MajorMinorPatch }}" >> "$GITHUB_ENV"
        echo "packageSemVerFull=${{ env.GitVersion_FullSemVer }}" >> "$GITHUB_ENV"
    - name: Get GitVersion variables (Release)
      run: |
        echo "packageSemVer=${{ env.GitVersion_MajorMinorPatch }}" >> "$GITHUB_ENV"
        echo "packageSemVerFull=${{ env.GitVersion_MajorMinorPatch }}" >> "$GITHUB_ENV"
      if: startsWith(github.repository, 'refs/tags')
    - name: Get GitVersion variables (Nightly)
      run: |
        echo "packageSemVer=${{ env.GitVersion_MajorMinorPatch }}" >> "$GITHUB_ENV"
        echo "packageSemVerFull=${{ env.GitVersion_MajorMinorPatch }}" >> "$GITHUB_ENV"
      if: startsWith(github.repository, 'refs/heads/master')
    - name: 'Output variables'
      id: outputVars
      run: |
        echo "packageSemVer=${{ env.packageSemVer }}" >> "$GITHUB_OUTPUT"    
        echo "packageSemVerFull=${{ env.packageSemVerFull }}" >> "$GITHUB_OUTPUT"    
  build:
    name: "Build, Test & Pack"
    runs-on: ubuntu-latest
    needs: gitversion
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x
    - name: Run tests
      run: dotnet test
    - name: Build & Pack
      run: dotnet pack /p:PackageVersion=${{ needs.gitversion.outputs.gitversionSemVerFull }} /p:Version=${{ needs.gitversion.outputs.gitversionSemVer }}/p:InformationalVersion=${{ needs.gitversion.outputs.gitversionSemVerFull }} -o ./publish -c Release
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: package-${{ needs.gitversion.outputs.gitversionSemVerFull }}
        path: ${{ github.workspace }}/publish
  deploy:
    name: Deploy NuGet package
    runs-on: ubuntu-latest
    needs: [gitversion, build]
    environment: NuGet
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: package-${{ needs.gitversion.outputs.gitversionSemVerFull }}
      - name: Deploy package to NuGet
        run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
